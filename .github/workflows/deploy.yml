name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup Pages
        uses: actions/configure-pages@v4
      
      - name: Prepare files for deployment
        run: |
          # Create a deployment directory
          mkdir -p _site
          
          # Copy all necessary files to _site
          cp index-redirect.html _site/index.html
          cp loading-screen.html _site/
          cp login.html _site/
          cp index.html _site/main-app.html
          cp styles.css _site/
          cp auth-styles.css _site/
          cp script.js _site/
          cp auth.js _site/
          cp cloud-storage.js _site/
          cp config.js _site/
          cp test-config.html _site/
          cp README.md _site/
          
          # Update auth.js to redirect to main-app.html instead of index.html
          sed -i "s/window\.location\.href = 'index\.html'/window.location.href = 'main-app.html'/g" _site/auth.js
          
          echo "Files prepared for GitHub Pages deployment"
          ls -la _site/
      
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
